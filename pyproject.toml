[project]
name = "reelname"
dynamic = ["version"]
description = "A tool to fix media file names"
authors = [{ name = "Visesh Prasad", email = "viseshrprasad@gmail.com" }]
readme = "README.md"
keywords = ["python"]
requires-python = ">=3.9,<4.0"
dependencies = [
    "click>=8.1.1",
    "watchdog>=6.0.0",
    "aiofiles>=24.1.0",
    "cinemagoer>=2023.5.1",
    "rapidfuzz>=3.13.0",
]
license = { text = "MIT" }
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Environment :: Console",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

[project.urls]
Homepage = "https://github.com/viseshrp/reelname"
Repository = "https://github.com/viseshrp/reelname"
Documentation = "https://github.com/viseshrp/reelname/blob/main/README.md"
Changelog = "https://github.com/viseshrp/reelname/blob/main/CHANGELOG.md"
Bug-Tracker = "https://github.com/viseshrp/reelname/issues"
CI = "https://github.com/viseshrp/reelname/actions"

[project.scripts]
reelname = "reelname.__main__:main"

[dependency-groups]
dev = [
    "ipdb",
    "uv",
    "tox",
    "tox-uv",
    "tox-gh-actions",
    "pytest",
    "pre-commit",
    "black",
    "ruff",
    "pip-audit",
    "bandit[toml]",
    "codespell",
    "mypy",
    "vulture",
    "deptry",
    "cogapp",
    "twine",
    "hatch",
]

[build-system]
requires = ["hatchling", "hatch-timestamp-version"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "reelname/_version.py"
source = "vcs-dev-timestamp"
validate-bump = true

[tool.hatch.version.raw-options]
local_scheme = "no-local-version"
timestamp_format = "long"

[tool.hatch.build.targets.wheel]
packages = ["reelname"]

[tool.hatch.build.targets.editable]
packages = ["reelname"]

[tool.hatch.envs.default]
path = ".venv"

[tool.uv]
default-groups = "all"

[tool.mypy]
files = [
    "reelname"
]
disallow_untyped_defs = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true
ignore_missing_imports = true
follow_imports = "silent"
disable_error_code = ["import-untyped"]

[tool.pytest.ini_options]
tmp_path_retention_policy = "failed"
testpaths = ["tests"]
addopts = "--capture=tee-sys --tb=native -p no:warnings -ra -vv"
markers = [
    "integration:Run integration tests",
    "smoke:Run the smoke tests",
    "unit:Run the unit tests",
]
norecursedirs = [
    ".git",
    ".idea",
]
filterwarnings = [
    "ignore:.+:DeprecationWarning"
]

[tool.ruff]
target-version = "py39"
line-length = 100
fix = true
unsafe-fixes = true
exclude = [".venv", "__init__.py"]

[tool.ruff.lint]
fixable = ["ALL"]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort (keep this if you want Ruff to sort imports)
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pep8-naming rules
    "N",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff-native rules
    "RUF",
    # try/except linting
    "TRY",
    # Disallow print statements
    "T201",
]
ignore = [
    "C901", # Function is too complex
    "UP007", # Can't be used with py39
    "UP006", # Unsafe (tuple[] support is runtime-only in 3.9)
    "UP035", # Unsafe removal of typing.Tuple
    "PGH003" # blanket-type-ignore
]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]
"scripts/*.py" = ["T201"]

[tool.ruff.lint.isort]
known-first-party = ["reelname", "tests"]
force-sort-within-sections = true

[tool.black]
line-length = 100
target-version = ["py39"]

[tool.codespell]
ignore-words = "codespell.txt"
skip = '*.pyc,*.xml,*.gif,*.png,*.jpg,*.js,*.html,*.json,*.gz,Makefile'
quiet-level = 3

[tool.bandit]
targets = ["reelname"]
exclude_dirs = ["venv", ".venv", "tests"]

[tool.vulture]
paths = ["reelname", "tests"]
min_confidence = 80
sort_by_size = true
exclude = ["venv/", ".venv/"]

[tool.deptry]
exclude = ["venv/.*", ".venv/.*", "tests/.*"]

[tool.pre-commit.default_language_versions]
python = "3.13"
